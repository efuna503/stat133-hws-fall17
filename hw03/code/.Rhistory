player2
#Use this data frame to create a scatterplot between Efficiency and Salary, including a lowess smooth line.
plot(player2$EFF,player2$Salary,main = "Scatterplot of efficiency and salary ",xlab = "Efficiency",ylab = "Salary",col="green",cex=1)
lines(lowess(player2$EFF,player2$Salary),col='red')
#Use this data frame to create a scatterplot between Efficiency and Salary, including a lowess smooth line.
plot(player2$EFF,player2$Salary,main = "Scatterplot of efficiency and salary in player2",xlab = "Efficiency",ylab = "Salary",col="green",cex=1)
lines(lowess(player2$EFF,player2$Salary),col='red')
#compute correlation
cor(player2$EFF,player2$Salary)
dat1 <- read.csv("~/nba2017-player-statistics.csv",colClasses = c("Player"="character","Team"="character","Experience"="character"))
str(dat1)
library(readr)
dat2 <- read_csv("~/nba2017-player-statistics.csv",col_types = cols("Position"=col_factor(levels = c('C', 'PF', 'PG','SF', 'SG'))))
str(dat2)
library(dplyr)
dat1 <- mutate(dat1,Missed_FG = dat1$FGA-dat1$FGM,
Missed_FT = dat1$FTA-dat1$FTM,
PTS = 3*dat1$Points3 + 2*dat1$Points2 + dat1$FTM,
REB = dat1$OREB + dat1$DREB,
MPG = dat1$MIN/dat1$GP,EFF = (PTS + REB + AST + STL + BLK - Missed_FG - Missed_FT - TO) / GP)
library(dplyr)
dat1 <- mutate(dat1,Missed_FG = dat1$FGA-dat1$FGM,
Missed_FT = dat1$FTA-dat1$FTM,
PTS = 3*dat1$Points3 + 2*dat1$Points2 + dat1$FTM,
REB = dat1$OREB + dat1$DREB,
MPG = dat1$MIN/dat1$GP,EFF = (PTS + REB + AST + STL + BLK - Missed_FG - Missed_FT - TO) / GP)
dat1
#summary statistic for above
summary(dat1$EFF)
#histogram
hist(dat1$EFF,main = "Histogram of Efficiency(EFF)",xlab = "EEF",col = "dark grey")
#Display the player name, team, salary, and EFF value of the top-10 players by EFF in decreasing order
dat3 <- select(slice(arrange(dat1,desc(EFF)),1:10),Player,Team,Salary,EFF)
dat3
#Provide the names of the players that have a negative EFF
select(filter(dat1,EFF<0),Player)
#Use the function cor() to compute the correlation coefficients between EFF and all the variables used in the EFF formula
cor(dat1$EFF,dat1$PTS)
cor(dat1$EFF,dat1$REB)
cor(dat1$EFF,dat1$AST)
cor(dat1$EFF,dat1$STL)
cor(dat1$EFF,dat1$BLK)
cor(dat1$EFF,-dat1$Missed_FG)
cor(dat1$EFF,-dat1$Missed_FT)
cor(dat1$EFF,-dat1$TO)
#Display the computed correlations in descending order, either in a vector or a dataframe
Cor <- c(cor(dat1$EFF,dat1$PTS),
cor(dat1$EFF,dat1$REB),
cor(dat1$EFF,dat1$AST),
cor(dat1$EFF,dat1$STL),
cor(dat1$EFF,dat1$BLK),
cor(dat1$EFF,-dat1$Missed_FG),
cor(dat1$EFF,-dat1$Missed_FT),
cor(dat1$EFF,-dat1$TO))
sort(Cor,decreasing = TRUE)
barplot(sort(Cor,decreasing = TRUE),main="Correlation between Player stats and EFF",cex.axis = 0.8,col = ifelse(Cor>0,"dark grey","coral1"),names.arg = c("PTS","REB","STL","AST","BLK","Missed_FT","Missed_FG","TO"),cex.names = 0.6,ylim = c(-1,1),border = NA)
plot(dat1$EFF,dat1$Salary,main = "Scatterplot of efficiency and salary",xlab = "Efficiency",ylab = "Salary",col="green",cex=1)
lines(lowess(dat1$EFF,dat1$Salary),col='red')
#diaplay linear correlation
cor(dat1$EFF,dat1$Salary)
# select those players that have an MPG value of 20 or more minutes per game
#Create a data frame players2 with these players.
player2 <- filter(dat1,MPG>=20)
player2
#Use this data frame to create a scatterplot between Efficiency and Salary, including a lowess smooth line.
plot(player2$EFF,player2$Salary,main = "Scatterplot of efficiency and salary in player2",xlab = "Efficiency",ylab = "Salary",col="green",cex=1)
lines(lowess(player2$EFF,player2$Salary),col='red')
#compute correlation
cor(player2$EFF,player2$Salary)
library(readr)
library(dplyr)
library(ggplot2)
read_csv(~/nba2017-players.csv)
read_csv("~/nba2017-players.csv")
dat <- read_csv("~/nba2017-players.csv")
filter(dat,)
filter(dat,team="GSW")
arrange(filter(dat,team=="GSW"),salary)
warriors <- arrange(filter(dat,team=="GSW"),salary)
select(warriors,salary)
?write.csv
write.csv(warriors,file = "c:/folder/warriors.csv",row.names = FALSE)
write.csv(warriors,file("c:/folder/warriors.csv"),row.names = FALSE)
write.csv(warriors,"c:/folder/warriors.csv",row.names = FALSE)
write.csv(warriors,file="c://folder//warriors.csv",row.names = FALSE)
write.csv(warriors,file="warriors.csv",row.names = FALSE)
lakers <- arrange(filter(dat,team=="LAL"),desc(experience))
lakers
write.csv(lakers,file = "lakers.csv",row.names = FALSE)
write.csv(warriors,file="C:\Users\eriko\lab06\data\warriors.csv",row.names = FALSE)
write.csv(warriors,file="C:/Users/eriko/lab06/data/warriors.csv",row.names = FALSE)
write.csv(lakers,file = "C:/Users/eriko/lab06/data/lakers.csv",row.names = FALSE)
sink(file = "C:/Users/eriko/lab06/output/data-structure.txt")
str(dat)
sink()
sink(file = "C:/Users/eriko/lab06/output/summary-warriors.txt")
summary(warriors)
sink()
sink(file = "C:/Users/eriko/lab06/output/summary-lakers.txt")
summary(lakers)
sink()
?plot
?png
png(filename = "C:/Users/eriko/lab06/imagesscatterplot-height-weight.png")
plot(dat$height,dat$weight,pch=20, xlab = "Height",ylab = "Weight")
dev.off()
png(filename = "C:/Users/eriko/lab06/images/scatterplot-height-weight.png")
plot(dat$height,dat$weight,pch=20, xlab = "Height",ylab = "Weight")
dev.off()
?plot
png(filename = "C:/Users/eriko/lab06/images/scatterplot-height-weight2.png")
plot(dat$height,dat$weight,pch=20, xlab = "Height",ylab = "Weight",
cex.axis=0.8,col="red",main="Scatterplot of height and weight")
dev.off()
?png
hist(dat$age,xlab = "age", width = 600, height = 400,)
?hist
hist(dat$age,xlab = "age",din(600,400),dev.size(units = "pixels"))
hist(dat$age,xlab = "age", dev.size(600,400,units = "px"))
hist(dat$age,xlab = "age", dev.size(width = 600, height = 400,units = "px"))
hist(dat$age,xlab = "age", dev.new(width = 600, height = 400),dev.size(units = "px"))
jpeg(filename = "C:/Users/eriko/lab06/images/histogram-age.jpeg")
hist(dat$age,xlab = "age", dev.new(width = 600, height = 400),
dev.size(units = "px"))
dev.off()
jpeg(filename = "C:/Users/eriko/lab06/images/histogram-age.jpeg",width = 600,
height = 400, dev.size(units = "px"))
hist(dat$age,xlab = "age")
dev.off()
jpeg(filename = "C:/Users/eriko/lab06/images/histogram-age.jpeg",width = 600,
height = 400)
dev.size(units = "px")
hist(dat$age,xlab = "age")
dev.off()
pdf(filename = "C:/Users/eriko/lab06/images/histogram-age2.pdf",width = 7,
height =5)
dev.size(units = "in")
hist(dat$age,xlab = "age",main = "histogram of age")
dev.off
?pdf
pdf(file = "C:/Users/eriko/lab06/images/histogram-age2.pdf",width = 7,
height =5)
dev.size(units = "in")
hist(dat$age,xlab = "age",main = "histogram of age")
dev.off
pdf(file = "C:/Users/eriko/lab06/images/histogram-age2.pdf",width = 7,
height =5)
hist(dat$age,xlab = "age",main = "histogram of age")
dev.off
?dev.cur
dev.off
pdf(file = if(onefile)"C:/Users/eriko/lab06/images/histogram-age2.pdf",width = 7,
height =5)
hist(dat$age,xlab = "age",main = "histogram of age")
dev.off
pdf(file = "C:/Users/eriko/lab06/images/histogram-age2.pdf",height = 7
,width = 5)
hist(dat$age,xlab = "age",main = "histogram of age")
dev.off
pdf("C:/Users/eriko/lab06/images/histogram-age2.pdf",height = 7
,width = 5)
hist(dat$age,xlab = "age",main = "histogram of age")
dev.off
pdf(if(onefile)"C:/Users/eriko/lab06/images/histogram-age2.pdf"else"C:/Users/eriko/lab06/images/histogram-age2%03d.pdf")
x <- c(1,2,3,4,5)
y <- c("a","b","c","d","e")
y[x<2]
y[x/x]
x[(y=="e")|(y=="a")]
?read.csv
read.csv("../data/nba2017-roster.csv")
getwd()
setwd
setwd(/Users/eriko/stat133/stat133-hws-fall17/hw03/code)
setwd(Users/eriko/stat133/stat133-hws-fall17/hw03/code)
setwd(C:/Users/eriko/stat133/stat133-hws-fall17/hw03/code)
setwd(/eriko/stat133/stat133-hws-fall17/hw03/code)
?setwd
geiwd
getwd()
setwd("C:/Users/eriko/stat133/stat133-hws-fall17/hw03/code")
read.csv("../data/nba2017-roster.csv")
read.csv("../data/nba2017-stats.csv")
dat1 <- read.csv("../data/nba2017-roster.csv")
dat2 <- read.csv("../data/nba2017-stats.csv")
mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (dat2$points+dat2$rebounds+dat2$assist+dat2$steals+
dat2$blocks-dat2$missed- dat2$missed_fg - dat2$missed_ft - dat2$turnovers)/dat2$games_played)
library(dplyr)
mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (dat2$points+dat2$rebounds+dat2$assist+dat2$steals+
dat2$blocks-dat2$missed- dat2$missed_fg - dat2$missed_ft - dat2$turnovers)/dat2$games_played)
mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (points+rebounds+assist+steals+
dat2$blocks- missed_fg - missed_ft - dat2$turnovers)/dat2$games_played)
mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
+        missed_ft=dat2$points1_atts-dat2$points1_made,
+        points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
+        rebounds = dat2$off_rebounds + dat2$def_rebounds,
+        efficiency= (points+rebounds+dat2$assist+dat2$steals+
+                         dat2$blocks- missed_fg - missed_ft - dat2$turnovers)/dat2$games_played)
mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (points+rebounds+assist+steals+
dat2$blocks- missed_fg - missed_ft - dat2$turnovers)/dat2$games_played)
mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (points+rebounds+dat2$assist+dat2$steals+
dat2$blocks- missed_fg - missed_ft - dat2$turnovers)/dat2$games_played)
dat2 <- mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made + dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (points+rebounds+dat2$assist+dat2$steals+
dat2$blocks- missed_fg - missed_ft - dat2$turnovers)/dat2$games_played)
sink(file = "../output/efficiency-summary.txt")
summary(dat2)
sink()
?merge
?kjoin
?join
merge(dat1,dat2)
dat <- merge(dat1,dat2)
colnames(dat)[dat$points1_made] <- "free_throws"
colnames(dat)[13] <- "free_throws"
dat
colnames(dat)[13] <- "field_goals_perc"
colnames(dat)[20] <- "free_throws"
dat
head(dat)
select(dat,team,experience,salary,dat$points3_made,dat$points2_made,free_throws,points,off_rebounds,def_rebounds,assists,steals,blocks,turnovers,fouls,efficiency)
select(dat,c(team,experience,salary,points3_made,points2_made,free_throws,points,off_rebounds,def_rebounds,assists,steals,blocks,turnovers,fouls,efficiency))
team <- select(dat,c(team,experience,salary,points3_made,points2_made,free_throws,points,off_rebounds,def_rebounds,assists,steals,blocks,turnovers,fouls,efficiency))
summary(team)
dat <- merge(dat1,dat2)
dat
team <- group_by(team)
summarise(team,Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(free_throws),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum)
summarise(team,Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(free_throws),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
summarise(group_by(team),Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(free_throws),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
colnames(dat)[20] <- "poins1_made"
group_by(dat,team)
?group_by
group_by(team)
team <- group_by(team)
summary(team)
summarise(dat,Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(points1_made),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
summarise(dat,Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(free_throws),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
dat
colnames(dat)[20] <- "points1_made"
summarise(dat,Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(points1_made),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
team <- group_by(team)
team <- data.frame(team,Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(points1_made),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
?data.frame
team <- summarize(group_by(dat,team),Experience=sum(experience),Salary=sum(salary),Points3=sum(points3_made),Points2=sum(points2_made),Free_throws=sum(points1_made),Points=sum(points),Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),Turnovers=sum(turnovers),Fouls=sum(fouls),Efficiency=sum(efficiency))
team
summary(team)
team <- summarize(group_by(dat,team),Experience=round(sum(experience),digits = 2),
Salary=round(sum(salary/(10^-6)),digits = 2),
Points3=sum(points3_made),Points2=sum(points2_made),
Free_throws=sum(points1_made),Points=sum(points),
Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),
Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),
Turnovers=sum(turnovers),Fouls=sum(fouls),
Efficiency=sum(efficiency))
summary(team)
team <- summarize(group_by(dat,team),Experience=round(sum(experience),digits = 2),
Salary=sum(round(salary/(10^-6),digits = 2)),
Points3=sum(points3_made),Points2=sum(points2_made),
Free_throws=sum(points1_made),Points=sum(points),
Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),
Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),
Turnovers=sum(turnovers),Fouls=sum(fouls),
Efficiency=sum(efficiency))
summary(team)
team <- summarize(group_by(dat,team),Experience=round(sum(experience),digits = 2),
Salary=sum(round(salary*(10^-6),digits = 2)),
Points3=sum(points3_made),Points2=sum(points2_made),
Free_throws=sum(points1_made),Points=sum(points),
Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),
Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),
Turnovers=sum(turnovers),Fouls=sum(fouls),
Efficiency=sum(efficiency))
summary(team)
team
?write.csv
sink(file = "../data/teams-summary.txt")
summary(team)
sink()
write.csv(team,file = "../data/nba2017-teams.csv")
stars(teams[ ,-1], labels = teams$team)
stars(team[ ,-1], labels = team$team)
stars(team[ ,-1], labels = "team$team")
?stars
stars(team[ ,-1], labels = dimnames(team)[,-1])
stars(team[ ,-1], labels = dimnames(team)[1])
stars(team[ ,-1], labels = dimnames(team)[-1])
stars(team[ ,-1], labels = dimnames(team)[,1])
stars(team[ ,-1], labels = team[,1])
stars(team[ ,-1], labels = team[,-1])
stars(team[ ,-1], labels = team$team)
stars(team[ ,-1], labels = nchar(team$team))
stars(team[ ,-1], labels = nchar("team$team"))
?dimnames
dimnames(team)[team$team]
dimnames(team)[[2]]
?rownames
?row.names
stars(team[ ,-1], labels = row.names(team)[2])
stars(team[ ,-1], labels = row.names(team))
stars(team[ ,-1], labels = row.names(team)[[2]])
stars(team[ ,-1], labels = rownames(team))
stars(team[ ,-1], labels = rownames(team)[2])
stars(team[ ,-1], labels = dimnames(team)[2])
stars(team[ ,-1], labels = dimnames(team)[team[,2]])
stars(team[ ,-1])
library(ggplot2)
ggplot(team,aes(x=reorder(team$Salary,Num),y=team$team))+geom_bar(fill='grey')coord_flip()
ggplot(team,aes(x=reorder(team$Salary,Num),y=team$team))+geom_bar(fill='grey')+coord_flip()
ggplot(team,aes(x=reorder(Salary,Num),y=team))+geom_bar(fill='grey')+coord_flip()
ggplot(team,aes(x=Salary,y=team)+geom_bar(fill='grey')+coord_flip()
ggplot(team,aes(x=Salary,y=team))+geom_bar(fill='grey')+coord_flip()
ggplot(team,aes(x=team))+geom_bar(stat='Salary',fill='grey')+coord_flip()
?geom_bar
ggplot(team,aes(x=team,y=reorder(Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(team,aes(x=team,y=reorder(Salary)))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(team,aes(x=reorder(team),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(data=team,aes(x=team,y=reorder(Salary)))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(data=team,aes(x=team,y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(data=team,aes(x=reorder(team),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
?reorder
ggplot(data=team,aes(x=reorder(team,count(team)),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(data=team,aes(x=reorder(team,team),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(data=team,aes(x=reorder(team,count),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
ggplot(data=team,aes(x=reorder(team,Count),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
team$team <- factor(team$team,levels = team$team[order(-team.mpg)])
team$team <- factor(team$team,levels = team$team[order(-team)])
team$team <- factor(team$team,levels = team$team[order(-count(team$team))])
ggplot(data=team,aes(x=reorder(team,-team),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#Basic Rankings
#Use ggplot() to create a barchart (horizontally oriented) The vertical red line is the average team salary.
ggplot(data=team,aes(x=team,y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')+labs(y="Salary(in millions)")+labs(x="teams")+ggtitle("NBA Teams ranked by Total Salary")
library(ggplot2)
#Basic Rankings
#Use ggplot() to create a barchart (horizontally oriented) The vertical red line is the average team salary.
ggplot(data=team,aes(x=reorder(team,-Salary),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')+labs(y="Salary(in millions)")+labs(x="teams")+ggtitle("NBA Teams ranked by Total Salary")
library(ggplot2)
#Basic Rankings
#Use ggplot() to create a barchart (horizontally oriented) The vertical red line is the average team salary.
ggplot(data=team,aes(x=reorder(team,Salary),y=Salary))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=90.95),col='red')+labs(y="Salary(in millions)")+labs(x="teams")+ggtitle("NBA Teams ranked by Total Salary")
#Create another bar chart of teams ranked by total points. The vertical red line is the average team points
ggplot(data=team,aes(x=reorder(team,Points),y=Points))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=mean(Points)),col='red')+labs(y="Total Points")+labs(x="teams")+ggtitle("NBA Teams ranked by Total Points")
#Use efficiency to obtain a third kind of ranking, and create an associated bar chart of teams ranked by total efficiency. The vertical red line is the average team efficiency.
ggplot(data=team,aes(x=reorder(team,Efficiency),y=Efficiency))+geom_bar(stat='identity',fill='grey')+coord_flip()+geom_hline(aes(yintercept=mean(Efficiency)),col='red')+labs(y="Total Efficiency")+labs(x="teams")+ggtitle("NBA Teams ranked by Total Efficiency")
?pca
??pca
?prcomp
prcomp(team[c(Points3,Points2,free_throws,Off_rebounds,Def_rebounds,Assists,Steals,Blocks,Turnovers,Fouls)])
prcomp(team[Points3])
prcomp(team)
prcomp(team[,3:16])
prcomp(team[,32:15])
prcomp(team[,2:15])
#Perform a principal components analysis (PCA) on the following variables
prcomp(team[,2:15])
#Perform a principal components analysis (PCA) on the following variables
prcomp(team[,2:15])
row.names(team) <- team$team
#Perform a principal components analysis (PCA) on the following variables
row.names(team) <- team$team
prcomp(team[,2:15])
#Perform a principal components analysis (PCA) on the following variables
prcomp(team[,2:15])
#Perform a principal components analysis (PCA) on the following variables
prcomp(team[,2:15],scale=TRUE)
#Use prcomp()—NOT to confuse with princomp()—to perform a PCA
prcomp(team[,2:15],scale=TRUE)
#.Create a data frame with the eigenvalues
eigenvalue <- eigen(team)
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC[1]
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC[1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC[1,]
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC[1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
stars(team[ ,-1],labels = as.character(team$team))
PC
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC1
ggplot(team,aes(x=Experience,y=Salary))+geom_point()
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC$x[1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
PC$x[1]
z1 <- PC$x[,1]
z1
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC$x[,1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
ggplot(team,aes(x=Experience,y=Salary))+geom_point()+geom_text(aes(label=team[,1]))
ggplot(team,aes(x=Experience,y=Salary))+geom_point()+geom_text(aes(label=team))
pdf(file = "../images/experience_salary.pdf")
ggplot(team,aes(x=Experience,y=Salary))+geom_point()+geom_text(aes(label=team))
dev.off()
pdf(file = "../image/experience_salary.pdf")
ggplot(team,aes(x=Experience,y=Salary))+geom_point()+geom_text(aes(label=team))
dev.off()
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC$x[,1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
#barchart
ggplot(data=team,aes(x=reorder(team,z1),y=z1))+geom_bar(stat='identity',fill='grey')+coord_flip()+labs(y="first pc(scaled from 0 to 100")+labs(x="teams")+ggtitle("NBA Teams ranked by scaled PC1")
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC$x[,1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
#barchart
ggplot(data=team,aes(x=reorder(team,s1),y=s1))+geom_bar(stat='identity',fill='grey')+coord_flip()+labs(y="first pc(scaled from 0 to 100")+labs(x="teams")+ggtitle("NBA Teams ranked by scaled PC1")
s1
z1
?eigen
?eigenvalue
?data.frame
data.frame(team,row.names = team$team)
team <- data.frame(team,row.names = team$team)
#Index based on PC1
PC <- prcomp(team,scale=TRUE)
#Index based on PC1
PC <- prcomp(team[,2:15],scale=TRUE)
z1 <- PC$x[,1]
s1 <- 100*(z1-min(z1))/(max(z1)-min(z1))
#barchart
ggplot(data=team,aes(x=reorder(team,s1),y=s1))+geom_bar(stat='identity',fill='grey')+coord_flip()+labs(y="first pc(scaled from 0 to 100")+labs(x="teams")+ggtitle("NBA Teams ranked by scaled PC1")
PC
eigen(PC)
dat1 <- read.csv("../data/nba2017-roster.csv")
dat2 <- read.csv("../data/nba2017-stats.csv")
#Adding new variables
dat2 <- mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made+dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (points+rebounds+dat2$assist+dat2$steals+
dat2$blocks- missed_fg - missed_ft - dat2$turnovers)
/dat2$games_played)
sink(file = "../output/efficiency-summary.txt")
summary(dat2)
sink()
#Merging Tables
dat <- merge(dat1,dat2)
colnames(dat)[20] <- "free_throws"
#Creating nba2017-teams.csv
team <- summarize(group_by(dat,team),Experience=round(sum(experience),digits = 2),
Salary=sum(round(salary*(10^-6),digits = 2)),
Points3=sum(points3_made),Points2=sum(points2_made),
Free_throws=sum(points1_made),Points=sum(points),
Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),
Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),
Turnovers=sum(turnovers),Fouls=sum(fouls),
Efficiency=sum(efficiency))
dat1 <- read.csv("../data/nba2017-roster.csv")
dat2 <- read.csv("../data/nba2017-stats.csv")
#Adding new variables
dat2 <- mutate(dat2,missed_fg=dat2$field_goals_atts - dat2$field_goals_made,
missed_ft=dat2$points1_atts-dat2$points1_made,
points= 3*dat2$points3_made +2*dat2$points2_made+dat2$points1_made,
rebounds = dat2$off_rebounds + dat2$def_rebounds,
efficiency= (points+rebounds+dat2$assist+dat2$steals+
dat2$blocks- missed_fg - missed_ft - dat2$turnovers)
/dat2$games_played)
sink(file = "../output/efficiency-summary.txt")
summary(dat2)
sink()
#Merging Tables
dat <- merge(dat1,dat2)
colnames(dat)[20] <- "free_throws"
#Creating nba2017-teams.csv
team <- summarize(group_by(dat,team),Experience=round(sum(experience),digits = 2),
Salary=sum(round(salary*(10^-6),digits = 2)),
Points3=sum(points3_made),Points2=sum(points2_made),
Free_throws=sum(free_throws),Points=sum(points),
Off_rebounds=sum(off_rebounds),Def_rebounds=sum(def_rebounds),
Assists=sum(assists),Steals=sum(steals),Blocks=sum(blocks),
Turnovers=sum(turnovers),Fouls=sum(fouls),
Efficiency=sum(efficiency))
